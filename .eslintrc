{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:unicorn/recommended",
    "prettier",
  ],
  "settings": {
    "react": {
      "version": "detect",
    },
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
      },
    },
  },
  "rules": {
    "no-var": "warn", // var 금지
    "no-multiple-empty-lines": "warn", // 여러 줄 공백 금지
    "no-console": ["warn", { "allow": ["warn", "error"] }], // console.log() 금지 (warn으로 경고)
    "eqeqeq": "warn", // == 대신 === 사용을 강제
    "dot-notation": "warn", // 가능하다면 dot notation 사용
    "no-unused-vars": "warn", // 사용하지 않는 변수 금지
    "react/destructuring-assignment": "warn", // state, prop 등에 구조분해 할당 적용
    "react/jsx-pascal-case": "warn", // 컴포넌트 이름은 PascalCase로
    "react/no-direct-mutation-state": "warn", // state 직접 수정 금지
    "react/jsx-no-useless-fragment": "warn", // 불필요한 fragment 금지
    "react/no-unused-state": "warn", // 사용되지 않는 state
    "react/jsx-key": "warn", // 반복문으로 생성하는 요소에 key 강제
    "react/self-closing-comp": "warn", // 셀프 클로징 태그 가능하면 적용
    "react/jsx-curly-brace-presence": "warn", // jsx 내 불필요한 중괄호 금지
    "unicorn/prevent-abbreviations": "off", // 약어 사용을 방지하는 규칙을 비활성화합니다.
    "@typescript-eslint/camelcase": "error", // 변수명은 CamelCase를 사용하도록 강제합니다.

    // 파일 이름은 kebab-case를 사용하도록 강제합니다. .ts, .tsx 파일과 node_modules 디렉토리는 무시합니다.
    "unicorn/filename-case": [
      "error",
      {
        "case": "kebabCase",
        "ignore": [".tsx?", "node_modules"],
      },
    ],

    "@typescript-eslint/naming-convention": [
      // 명명 규칙 설정
      "error",
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"], // ENUM 멤버는 대문자 사용 강제
      },
      {
        "selector": "function",
        "format": ["camelCase"], // 함수 이름은 CamelCase 사용 강제
      },
      {
        "selector": "interface",
        "format": ["PascalCase"], // 인터페이스 이름은 PascalCase 사용 강제
        "custom": {
          "regex": "^[A-Z]", // 대문자로 시작하는 이름 규칙
          "match": false,
        },
      },
    ],

    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto",
      },
    ],
  },
  "env": {
    "browser": true,
  },
}
